import Head from 'next/head';
import Link from 'next/link';
import { useEffect, useState } from 'react';
import styles from '../styles/Home.module.css';

const API_TOKEN = 'https://api.nasa.gov';
const TOKEN = 'eyM6hqgRiS4il65FrxVT34FdVogIQlgjg6FMrWRm';

export default function Home(props) {
  console.log('---HOME PROPS---', props);
  const [data, setData] = useState(props.data);

  // useEffect(() => {
  //   fetch(`${API_TOKEN}/neo/rest/v1/feed?api_key=${TOKEN}`)
  //     .then((data) => data.json())
  //     .then((data) => {
  //       setData(data);
  //     });
  // }, []);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta
          name="description"
          content="Generated by create next app"
        />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={styles.container}>
        <h1>Asteriod list</h1>
        {data &&
          Object.keys(data.near_earth_objects).map((key) => (
            <div key={key}>
              <h2>{key}</h2>
              <ul>
                {data.near_earth_objects[key].map((ast) => (
                  <p key={ast.id}>
                    <Link href={`/asteroid/${ast.id}`}>
                      {ast.name}
                    </Link>
                  </p>
                ))}
              </ul>
            </div>
          ))}
      </div>
    </>
  );
}

// export const getServerSideProps = (context) => {
//   console.log('getServerSideProps CONTEXT', Object.keys(context));

//   return {
//     props: {
//       message: 'Hello',
//     },
//   };
// };

export const getServerSideProps = async () => {
  const response = await fetch(
    `${API_TOKEN}/neo/rest/v1/feed?api_key=${TOKEN}`,
  );
  const data = await response.json();

  return {
    props: {
      data,
    },
  };
};

// export const getStaticProps = async () => {
//   const response = await fetch(
//     `${API_TOKEN}/neo/rest/v1/feed?api_key=${TOKEN}`,
//   );
//   const data = await response.json();

//   console.log('fetching from getStaticProps');

//   return {
//     props: {
//       data,
//       // randomValue: Math.random() * 100,
//     },
//     // revalidate: 10, // sec
//   };
// };
